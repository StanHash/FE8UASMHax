#ifndef MSG_MODIFIER_ROUTINES_EVENT
#define MSG_MODIFIER_ROUTINES_EVENT

#include "eastdlib.event"
#include "Extensions/Hack Installation.txt"

#include "MSGConditionsRoutines.event"

ALIGN 4

prAddUnitFinalMaxHP:
	rAdd; rCallForUnit(pMaxHPGetter)

prAddUnitFinalCurHP:
	rAdd; rCallForUnit(pCurHPGetter)

prAddUnitFinalPow:
	rAdd; rCallForUnit(pPowGetter)

prAddUnitFinalSkl:
	rAdd; rCallForUnit(pSklGetter)

prAddUnitFinalSpd:
	rAdd; rCallForUnit(pSpdGetter)

prAddUnitFinalDef:
	rAdd; rCallForUnit(pDefGetter)

prAddUnitFinalRes:
	rAdd; rCallForUnit(pResGetter)

prAddUnitFinalLck:
	rAdd; rCallForUnit(pLckGetter)

prAddUnitFinalAid:
	rAdd; rCallForUnit(pAidGetter)

prAddUnitFinalCon:
	rAdd; rCallForUnit(pConGetter)

prAddUnitFinalMov:
	rAdd; rCallForUnit(pMovGetter)

prAddUnitMaxHP:
	rAddCharUByte(0x12)

prAddUnitCurHP:
	rAddCharUByte(0x13)

prAddUnitPow:
	rAddCharUByte(0x14)

prAddUnitSkl:
	rAddCharUByte(0x15)

prAddUnitSpd:
	rAddCharUByte(0x16)

prAddUnitDef:
	rAddCharUByte(0x17)

prAddUnitRes:
	rAddCharUByte(0x18)

prAddUnitLck:
	rAddCharUByte(0x19)

prAddUnitConBonus:
	rAddCharUByte(0x1A)

prAddUnitMovBonus:
	rAddCharUByte(0x1D)
	
prAddEquipHP:
	rAdd; rCallForEquip(prGetItemHPBonus)

prAddEquipPow:
	rAdd; rCallForEquip(prGetItemPowBonus)

prAddEquipSkl:
	rAdd; rCallForEquip(prGetItemSklBonus)

prAddEquipSpd:
	rAdd; rCallForEquip(prGetItemSpdBonus)

prAddEquipDef:
	rAdd; rCallForEquip(prGetItemDefBonus)

prAddEquipRes:
	rAdd; rCallForEquip(prGetItemResBonus)

prAddEquipLck:
	rAdd; rCallForEquip(prGetItemLckBonus)

prAddUnitBaseCon:
{
	rCallSequence(_prAddClassCon _prAddCharConBonus)
	
_prAddClassCon:
	rAdd; rGetROMClassUByte(0x11)

_prAddCharConBonus:
	rAdd; rGetROMCharSByte(0x13)
}

prAddUnitBaseMov:
	rAdd; rGetROMClassUByte(0x12)

prCheckForHPCap:
	#incbin "asm/CheckForHPCap.bin"

prAddUnitBarrierModifier:
	rAdd; rGetCharUpperHalfByte(0x31)
	// #incbin "asm/AddUnitBarrierModifier.bin"

prNullifyIfGuardAI:
	rIfHasGuardAI; rNullified

prHalveIfRescuing: // 0x00000010 = rescue state flag
	rIfHasStateFlag(0x00000010); rHalved

prAdjustAidIfMounted: // 0x00000001 = mounted aid flag
{
	// rIfHasAttribute(0x00000001); rCall(prAdjustMountedAid)
	rIfHasAttribute(0x00000001); rCallSequence(_prRemoveMountedAidBonus _prNegated)
	
_prRemoveMountedAidBonus:
	rSub; rSwitchConst(19, 24); rCall(prHasAttribute, 0x00004000)

_prNegated:
	rNegated
}

prDecrement:
	rSub; rConst(1)

#endif // MSG_MODIFIER_ROUTINES_EVENT
